name: Deploy to EC2

on:
  workflow_call:
    # inputs:
    #   environment:
    #     required: false
    #     type: string
    #   trigger_pipeline:
    #     required: false
    #     type: string 

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: tf-outputs

      - name: Download docker-compose artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-compose

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
            role-to-assume: ${{ vars.ROLE_ARN }}
            role-session-name: github-actions-labsadm
            aws-region: ${{ vars.AWS_REGION }}

      - name: Load instance ID from file
        run: cat tf-outputs.env >> $GITHUB_ENV

      - name: Upload docker-compose to S3
        run: |
          aws s3 cp docker-compose.yaml s3://dev-artifact-ecobytes/docker-compose.yaml

      - name: Transfer docker-compose to EC2
        run: |
          aws ssm send-command --instance-ids ${{env.INSTANCE_ID}} --document-name "AWS-RunShellScript" --parameters commands=["aws s3 cp s3://dev-artifact-ecobytes/docker-compose.yaml /home/ubuntu/docker-compose.yaml"]

    #   - name: Transfer docker-compose to EC2
    #     id: transfer
    #     uses: peterkimzz/aws-ssm-send-command@1.1.1
    #     with:
    #         instance-ids: ${{ env.INSTANCE_ID }}
    #         document-name: AWS-RunShellScript
    #         comment: Copy docker-compose file from S3 to EC2
    #         parameters: commands=["aws s3 cp s3://dev-artifact-ecobytes/docker-compose.yaml /home/ubuntu/docker-compose.yaml"]


    #   - name: Transfer docker-compose to EC2
    #     uses: aws-actions/aws-ssm-send-command@1.0.0
    #     with:
    #         instance-ids: ${{ env.INSTANCE_ID }}
    #         document-name: AWS-RunShellScript
    #         parameters: commands=["aws s3 cp s3://dev-artifact-ecobytes/docker-compose.yaml /home/ubuntu/docker-compose.yaml"]

      - name: Show transfer result
        run: |
         echo "Transfer result: ${{ steps.transfer.outputs.result }}"
    
      - name: Deploy to EC2
        run: |
          aws ssm send-command --instance-ids ${{env.INSTANCE_ID}} --document-name "AWS-RunShellScript" --parameters commands=["sudo docker-compose -f /home/ubuntu/docker-compose.yaml up -d"]