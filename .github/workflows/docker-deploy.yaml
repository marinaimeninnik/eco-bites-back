name: Deploy to EC2

on:
  workflow_call:
    # inputs:
    #   environment:
    #     required: false
    #     type: string
    #   trigger_pipeline:
    #     required: false
    #     type: string 

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: tf-outputs

      - name: Download docker-compose artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-compose

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
            role-to-assume: ${{ vars.ROLE_ARN }}
            role-session-name: github-actions-labsadm
            aws-region: ${{ vars.AWS_REGION }}

    #   - name: Setup AWS CLI
    #     uses: aws-actions/aws-cli-setup@v2

      - name: Load instance ID from file
        run: source tf-outputs.env

      - name: Check instance ID stage
        run: echo $INSTANCE_ID

      - name: Upload docker-compose to S3
        run: |
          aws s3 cp docker-compose.yaml s3://dev-artifact-ecobytes/docker-compose.yaml

      - name: Double-check stage
        run: |
          aws s3 ls s3://dev-artifact-ecobytes/


    #   - name: Transfer docker-compose to EC2
    #    #   aws ssm send-command --instance-ids $INSTANCE_ID --document-name "AWS-RunShellScript" --parameters commands=["aws s3 cp s3://dev-artifact-ecobytes/docker-compose.yaml /home/ubuntu/docker-compose.yaml"]
    #     run: |       
    #         output=$(aws ssm send-command --instance-ids $INSTANCE_ID --document-name "AWS-RunShellScript" --parameters commands=["aws s3 cp s3://dev-artifact-ecobytes/docker-compose.yaml /home/ubuntu/docker-compose.yaml"])
    #         command_id=$(echo $output | jq -r '.Command.CommandId')
    #         echo "command-id=$command_id" >> GITHUB_ENV

    #   - name: Check SSM command status
    #     run: |
    #         aws ssm list-command-invocations --command-id ${{env.command-id }}--details

    #   - name: Deploy to EC2
    #     run: |
    #       aws ssm send-command --instance-ids $INSTANCE_ID --document-name "AWS-RunShellScript" --parameters commands=["sudo docker-compose -f /home/ubuntu/docker-compose.yaml up -d"]

    #   - name: Transfer docker-compose to EC2
    #     uses: peterkimzz/aws-ssm-send-command@1.0.0
    #     with:
    #         instance-ids: ${{ env.INSTANCE_ID }}
    #         document-name: AWS-RunShellScript
    #         comment: Copy docker-compose file from S3 to EC2
    #         parameters: commands=["aws s3 cp s3://dev-artifact-ecobytes/docker-compose.yaml /home/ubuntu/docker-compose.yaml"]

    #   - name: Deploy to EC2
    #     uses: peterkimzz/aws-ssm-send-command@1.0.0
    #     with:
    #         instance-ids: ${{ env.INSTANCE_ID }}
    #         document-name: AWS-RunShellScript
    #         comment: Run docker-compose up
    #         parameters: commands=["sudo docker-compose -f /home/ubuntu/docker-compose.yaml up -d"]