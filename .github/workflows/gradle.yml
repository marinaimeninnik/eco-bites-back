# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  workflow_dispatch:
    inputs:
    #   release-artifact:
    #     description: "Manually creates the .jar artifact"
    #     required: false
    #     type: boolean
    #     default: false
      environment:
        description: "Chose environment to deploy"
        required: true
        type: choice
        options:
          - dev
          # - prod

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
    - name: Checkout sources
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
      with:
        gradle-version: '8.5'

# -------------------------------------------------------------------        
    - name: Build with Gradle 8.5
      run: gradle build

    - name: Semantic Release
      uses: cycjimmy/semantic-release-action@v4
      id: semantic
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ vars.ROLE_ARN }}
        role-session-name: github-actions-labsadm
        aws-region: ${{ vars.AWS_REGION }}

    - name: Determine Docker Image Tag
      id: docker_tag
      run: |
        IMAGE_TAG="v0.0.0"
        if [ "${{ steps.semantic.outputs.new_release_published }}" = "true" ]; then
          echo "IMAGE_TAG=v${{ steps.semantic.outputs.new_release_version }}" | tee -a $GITHUB_ENV > variables.env
        else
          echo "IMAGE_TAG=$(git describe --tags --abbrev=0)" | tee -a $GITHUB_ENV > variables.env
        fi
        echo "IMAGE_TAG"

    # - name: Log in to DockerHub
    #   uses: docker/login-action@v1
    #   with:
    #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
    #     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
    
    - name: Build and push Docker backend-image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        # tags: ${{ secrets.DOCKER_HUB_USERNAME }}/prod:app-${{ env.IMAGE_TAG }}
        tags: ${{ steps.login-ecr.outputs.registry }}/eco-bites:app-${{ env.IMAGE_TAG }}
        
    - name: Build and push Docker db-image
      uses: docker/build-push-action@v2
      with:
        context: ./db
        push: true
        # tags: ${{ secrets.DOCKER_HUB_USERNAME }}/db:db-${{ env.IMAGE_TAG }}
        tags: ${{ steps.login-ecr.outputs.registry }}/eco-bites:db-${{ env.IMAGE_TAG }}
# ------------------------------------------------------------------------


    # ############## to delete ############### #
    # - name: Artifact Creation
    #   uses: actions/upload-artifact@v4.3.3
    #   with:
    #     name: env-file
    #     path: variables.env

    #######################################################
        
  deploy:
    needs: build
    uses: marinaimeninnik/eco-bites-infra/.github/workflows/infra-create.yaml@back-deployment
    permissions:
      id-token: write
      contents: read
    with:
      environment: ${{ github.event.inputs.environment }}
      image_tag:  ${{ needs.build.outputs.IMAGE_TAG }}


    # steps:
    #   - name: Trigger Infra Workflow
    #     uses: benc-uk/workflow-dispatch@v1.2.3
    #     with:
    #       workflow: 'infra-create'
    #       repo: marinaimeninnik/eco-bites-infra
    #       token: ${{ secrets.GH_TOKEN }} # Personal Access Token with repo scope
    #       # ref: main
    #       ref: back-deployment
    #       # inputs: |
    #       #   {
    #       #     "image_tag": "${{ env.IMAGE_TAG }}"
    #       #   }
    #       inputs: |
    #         {
    #           "image_tag": "latest"
    #         }

      # - name: Trigger Infra Workflow
      #   uses: marinaimeninnik/eco-bites-infra/.github/workflows/infra-create.yaml@main
      #   with:
      #     image_tag: 'latest'
          # secrets:
          #   ROLE_ARN: ${{ secrets.ROLE_ARN }}
          #   AWS_REGION: ${{ secrets.AWS_REGION }}


    #   - name: Download env-file artifact
    #     uses: actions/download-artifact@v2
    #     with:
    #       name: env-file

    #   - name: Read env-file and set environment variable
    #     run: |
    #       echo "$(cat env-file)" >> $GITHUB_ENV

    #   - name: Deploy Infrastructure
    #     uses: marinaimeninnik/eco-bites-infra/.github/workflows/infra-create.yaml@main
    #     with:
    #       environment: 'dev'
    #       image_tag: ${{ env.IMAGE_TAG }}
    # uses: marinaimeninnik/eco-bites-infra/.github/workflows/infra-create.yaml@main
    # with:
    #   environment: 'dev'
    #   image_tag: ${{ env.IMAGE_TAG }}
